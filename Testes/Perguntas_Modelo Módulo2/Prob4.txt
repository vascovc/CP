*** --- Prob4 --- ***

a) Escreva as linhas de código de todas as comunicações coletivas mencionadas no al-
goritmo. Não se preocupe com as declarações de variáveis, etc.
	
No total são 3 comunicações coletivas:
	1. Cada processo recebe 'posglobal' do processo de rank 0
	
	/* int MPI_Bcast(void* buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm) *	
	MPI_Bcast(posglobal, 3*N, MPI_DOUBLE, 0, MPI_COMM_WORLD);

	2. Cada processo recebe 'poslocal' e 'vellocal' do processo de rank==0
	
	/* int MPI_Scatter(const void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, 					int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm) 
	sendcount -> number of elements sent to each process */
		
	MPI_Scatter(posglobal, 3*N/4, MPI_DOUBLE, poslocal, 3*N/4, MPI_DOUBLE, 0, MPI_COMM_WORLD);
	MPI_Scatter(velglobal, 3*N/4, MPI_DOUBLE, vellocal, 3*N/4, MPI_DOUBLE, 0, MPI_COMM_WORLD);

	3. Todos os processos comunicam entre si para atualizar 'posglobal'
	
	/* int MPI_Allgather(const void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, 						int recvcount, MPI_Datatype recvtype, MPI_Comm comm)
	The block of data sent from the j-th process is received by every process and placed in the j-th block of the buffer recvbuf. */

	MPI_Allgather(poslocal, 3*N/4, MPI_DOUBLE, posglobal, 3*N/4, MPI_DOUBLE, MPI_COMM_WORLD);

b) Suponha agora que o número de partículas não é múltiplo de 4. Qual é a nova função
de comunicação que tem que ser usada no processo atualização de 'posglobal' no
fim de cada passo? Tem que dizer qual é e explicar porquê, mas não tem que escrever
o novo código.
	
Se os tamanhos de informação a juntar (blocos) forem diferentes é preciso usar o MPI_Allgatherv()
/*
int MPI_Allgatherv(const void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm) 

recvcounts -> non-negative integer array (of length group size) containing the number 				  		  of elements that are received from each process
displs -> integer array (of length group size). Entry i specifies the displacement 
		  (relative to recvbuf) at which to place the incoming data from process i
*/